
package com.example.vulnerableapp;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.expression.ExpressionParser;
import org.springframework.expression.spel.standard.SpelExpressionParser;
import org.springframework.expression.spel.support.StandardEvaluationContext;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class VulnerableController {

    @Autowired
    private SomeService someService;

    @PostMapping("/evaluate")
    public String evaluateExpression(@RequestBody String spelExpression) {
        ExpressionParser parser = new SpelExpressionParser();
        StandardEvaluationContext context = new StandardEvaluationContext();
        context.setVariable("someService", someService);

        // Vulnerable part: Evaluating user-provided SpEL expression without any sanitization or validation
        Object value = parser.parseExpression(spelExpression).getValue(context);

        return "Result: " + value;
    }
}
