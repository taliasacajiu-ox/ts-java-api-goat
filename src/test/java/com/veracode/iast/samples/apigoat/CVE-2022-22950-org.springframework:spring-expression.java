
import org.springframework.expression.ExpressionParser;
import org.springframework.expression.spel.standard.SpelExpressionParser;
import org.springframework.expression.spel.support.StandardEvaluationContext;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class VulnerableController {

    @PostMapping("/evaluate")
    public String evaluateExpression(@RequestBody String expression) {
        ExpressionParser parser = new SpelExpressionParser();
        // A vulnerable context setup without proper validation or limitation
        StandardEvaluationContext context = new StandardEvaluationContext();
        context.setVariable("runtime", Runtime.getRuntime());

        try {
            // Evaluation of user-provided expression without sanitization
            Object value = parser.parseExpression(expression).getValue(context);
            return "Result: " + value;
        } catch (Exception e) {
            return "Error evaluating expression";
        }
    }
}
